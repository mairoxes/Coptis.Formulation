// <auto-generated />
using System;
using Coptis.Formulation.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coptis.Formulation.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018072339_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.Formula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BatchWeight")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool>("IsHighlighted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeightUnit")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Formulas", (string)null);
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.FormulaComponent", b =>
                {
                    b.Property<Guid>("FormulaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RawMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EffectiveWeight")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(9,4)");

                    b.HasKey("FormulaId", "RawMaterialId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("FormulaComponents", (string)null);
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.RawMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PriceAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ReferenceUnit")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RawMaterials", (string)null);
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.RawMaterialSubstance", b =>
                {
                    b.Property<Guid>("RawMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(9,4)");

                    b.HasKey("RawMaterialId", "SubstanceId");

                    b.HasIndex("SubstanceId");

                    b.ToTable("RawMaterialSubstances", (string)null);
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.Substance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Substances", (string)null);
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.FormulaComponent", b =>
                {
                    b.HasOne("Coptis.Formulation.Domain.Entities.Formula", "Formula")
                        .WithMany("Components")
                        .HasForeignKey("FormulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coptis.Formulation.Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("UsedInComponents")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Formula");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.RawMaterialSubstance", b =>
                {
                    b.HasOne("Coptis.Formulation.Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("SubstanceShares")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coptis.Formulation.Domain.Entities.Substance", "Substance")
                        .WithMany("InRawMaterials")
                        .HasForeignKey("SubstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RawMaterial");

                    b.Navigation("Substance");
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.Formula", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.RawMaterial", b =>
                {
                    b.Navigation("SubstanceShares");

                    b.Navigation("UsedInComponents");
                });

            modelBuilder.Entity("Coptis.Formulation.Domain.Entities.Substance", b =>
                {
                    b.Navigation("InRawMaterials");
                });
#pragma warning restore 612, 618
        }
    }
}
